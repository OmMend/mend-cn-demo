name: Docker Image build flow CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOCKER_IMAGE_NAME: my-app:1.0
  MEND_ORG_UUID: ${{ secrets.MEND_ORG_UUID }}
  MEND_EMAIL: ${{ env.MEND_EMAIL }}
  MEND_USER_KEY: ${{ secrets.MEND_USER_KEY }}
  MEND_URL: ${{ env.MEND_URL }}
  SCANNER_URL: https://example.com/mend-cn

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag $DOCKER_IMAGE_NAME

    - name: Download Mend CLI
      run: |
          # curl -o mend $SCANNER_URL
          chmod +x ./mend-cn/mend

    - name: Run Mend CLI and export results to SARIF
      run: |
          export $MEND_ORG_UUID
          export $MEND_USER_KEY
          export $MEND_URL
          export $MEND_EMAIL
          ./mend-cn/mend $DOCKER_IMAGE_NAME --filter critical,high --format sarif > image-scans/$DOCKER_IMAGE_NAME.sarif
          
      
    - name: Push SARIF file to image-scans folder
      uses: actions/upload-artifact@v2
      with:
        name: scan-results
        path: image-scans/$DOCKER_IMAGE_NAME.sarif
        
        
    - name: Fail if critical vulnerabilities found
      run: |
          CRITICAL_COUNT=`cat image-scans/$DOCKER_IMAGE_NAME.sarif | grep '"CRITICAL"' | wc -l`
          if [ $CRITICAL_COUNT -gt 0 ]; then
            echo "Found $CRITICAL_COUNT critical vulnerabilities"
            exit 1
          fi    
          
